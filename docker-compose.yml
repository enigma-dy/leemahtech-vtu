services:
  leemah-app:
    build:
      context: .
    container_name: Leemah
    command: ['npm', 'run', 'start:prod']
    restart: unless-stopped
    ports:
      - '3000:3000'
    logging:
      options:
        max-size: '10m'
        max-file: '3'
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      leemah-migrate:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      papercut:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
    env_file:
      - .env.production

  leemah-migrate:
    build:
      context: .
    command: ['npx', 'prisma', 'migrate', 'dev', '--name', 'init']
    restart: on-failure
    dns:
      - 8.8.8.8
      - 8.8.4.4
    env_file:
      - .env.production

  db:
    image: postgres:15
    container_name: postgres
    env_file:
      - .env.production
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s

  papercut:
    image: jijiechen/papercut
    container_name: papercut
    restart: unless-stopped
    ports:
      - '37408:37408'
      - '1025:25'
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:37408']
      interval: 10s
      timeout: 5s
      retries: 3

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel --url http://Leemah:3000
    depends_on:
      - leemah-app

  backup:
    image: rclone/rclone:latest
    container_name: backup
    volumes:
      - ./backups:/backups
      - ./backups/.pgpass:/root/.pgpass:ro
      - ./rclone/rclone.conf:/config/rclone/rclone.conf:ro
      - db-data:/db-data:ro
    entrypoint: /bin/sh -c "chmod 600 /root/.pgpass && chmod +x /backups/backup.sh && while true; do /backups/backup.sh; sleep 3600; done"
    depends_on:
      - db

volumes:
  db-data:
